#‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ù•
#‚î£‚Ä¢C Ä·¥á·¥Ä·¥õ·¥è Ä¬† ~ @New_AMBOT 
#‚î£‚Ä¢·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥áÍú±1 ~ @AbhiModszYT_Return
#‚î£‚Ä¢·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥áÍú±2 ~ @AMBOTYT
#‚î£‚Ä¢·¥ò·¥è·¥°·¥á Ä  ô è : @Logs_Gban
#‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ù•
import random
from pyrogram import Client, filters
from config import BOT_USERNAME, CHANNEL, SUPPORT, OWNER_USERNAME, OWNER_ID
from AM import AM as ECOMUSIC 
from pyrogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from AM.Helper.strings import (music_txt, ai_txt, bass_txt, youtube_txt, 
misc_txt, broadcast_txt, checker_txt, devs_txt, instagram_txt, fban)
from pyrogram.enums import ChatType
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message


# ------------------------------------------------------------------------------- #
AM_PIC = [
    "https://telegra.ph/file/7c25ef427c9f3cded5577.jpg",
    "https://telegra.ph/file/625d235cc0a22fb8525b5.jpg",
    "https://telegra.ph/file/1c62254d59baf7f968ba7.jpg",
    "https://telegra.ph/file/7a0553bd4664486ab3008.jpg",
    "https://telegra.ph/file/7b4dfa606e6f23961d30e.jpg",
    "https://telegra.ph/file/2773dec98d87b8562618c.jpg",
    "https://telegra.ph/file/80353d02e0368b71d2666.jpg",
    "https://telegra.ph/file/6e5331dc4bef87464ea1c.jpg",
    "https://telegra.ph/file/199a2e44cb8e77bb21b34.jpg",
    "https://telegra.ph/file/8371bcd8952d089f9ec05.jpg",
    "https://telegra.ph/file/f970e559dd1bb96fced1a.jpg",
    "https://telegra.ph/file/59a305f8ce0c4e85949cc.jpg"
]
start_txt = """
** ú·¥á ü ü·¥è** {} 

…™ ·¥Ä·¥ç ùôÄùôòùô§,  è·¥è·¥ú Ä ·¥ç·¥ús…™·¥Ñ ·¥†…™ Ä·¥õ·¥ú·¥ès·¥è! …™·¥ç·¥ç·¥á Äs·¥á  è·¥è·¥ú Äs·¥á ü“ì …™…¥ “ì ü·¥Ä·¥° ü·¥áss  ô·¥á·¥Ä·¥õs ·¥°…™·¥õ ú ·¥¢·¥á Ä·¥è  ü·¥Ä…¢ ‚Äì …™'·¥ç …¥·¥è·¥õ ·¥ä·¥ús·¥õ ·¥Ä ·¥ç·¥ús…™·¥Ñ  ô·¥è·¥õ; …™'·¥ç ·¥õ ú·¥á s è·¥ç·¥ò ú·¥è…¥ è ·¥è“ì ·¥õ ú·¥á “ì·¥ú·¥õ·¥ú Ä·¥á, ·¥õ·¥Ä…™ ü·¥è Ä·¥á·¥Ö “ì·¥è Ä  è·¥è·¥ú Ä ·¥ç·¥ús…™·¥Ñ·¥Ä ü  ô ü…™ss.

‚ú® Íú∞·¥á·¥Ä·¥õ·¥ú Ä·¥áÍú± ‚ö°Ô∏è
‚óÜ  ô·¥è·¥õ “ì·¥è Ä ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç …¢ Ä·¥è·¥ú·¥òs.
‚óÜ S·¥ú·¥ò·¥á Ä“ì·¥Äs·¥õ  ü·¥Ä…¢ F Ä·¥á·¥á ·¥ò ü·¥Ä è·¥á Ä.
‚óÜ  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥ò ü·¥Ä è ·¥ç·¥úÍú±…™·¥Ñ + ·¥†…™·¥Ö·¥á·¥è.
‚óÜ  ü…™·¥†·¥á Íú±·¥õ Ä·¥á·¥Ä·¥ç…™…¥…¢.
‚óÜ …¥·¥è ·¥ò Ä·¥è·¥ç·¥è.
‚óÜ  ô·¥áÍú±·¥õ Íú±·¥è·¥ú…¥·¥Ö Q·¥ú·¥Ä ü…™·¥õ è.
‚óÜ Íú∞·¥ú ü ü  ô·¥ÄÍú±Íú±  ô·¥è·¥è·¥ç ·¥õ·¥è·¥ò Q·¥ú·¥Ä ü…™·¥õ è.
‚óÜ 24√ó7  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥ò ü·¥Ä è ·¥ç·¥úÍú±…™·¥Ñ.
‚óÜ ·¥Ä·¥Ö·¥Ö ·¥õ ú…™Íú±  ô·¥è·¥õ …™…¥  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ä…¥·¥Ö ·¥ç·¥Ä·¥ã·¥á …™·¥õ ·¥Ä·¥Ö·¥ç…™…¥ ·¥Ä…¥·¥Ö ·¥á…¥·¥ä·¥è è ·¥ç·¥úÍú±…™·¥Ñ üéµ.
"""

# ------------------------------------------------------------------------------- #

button = InlineKeyboardMarkup([
        [
            InlineKeyboardButton("‚ûï ·¥Ä·¥Ö·¥Ö ·¥ç·¥á …™…¥  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò", url=f"https://t.me/{BOT_USERNAME}?startgroup=true"),    
        ],
        [
            InlineKeyboardButton("…¢ ô·¥Ä…¥  ü·¥è…¢Íú±", url=f"https://t.me/{CHANNEL}"),    
        ],
        [
            InlineKeyboardButton(" ú·¥á ü·¥ò & ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös", callback_data="help_"),    
        ]
])



# ------------------------------------------------------------------------------- #

help_txt = """**
**¬ª ùôÄùôòùô§. ·¥Ñ·¥è·¥è ü ·¥è Ä ·¥áx·¥Ñ ü·¥ús…™·¥†·¥á “ì·¥á·¥Ä·¥õ·¥ú Ä·¥ás** 
"""



# ------------------------------------------------------------------------------- #

ECOMUSIC_buttons = [              
                [
                    InlineKeyboardButton("·¥ç·¥ús…™·¥Ñ", callback_data="music_"),   
                    InlineKeyboardButton("…¢·¥ò·¥õ-·¥Ä…™", callback_data="ai_"),
                    InlineKeyboardButton(" ô·¥Äss", callback_data="bass_")
                ],
                [
                    InlineKeyboardButton(" è·¥è·¥ú·¥õ·¥ú ô·¥á", callback_data="youtube_"),   
                    InlineKeyboardButton("·¥ç…™s·¥Ñ", callback_data="misc_"),
                    InlineKeyboardButton(" ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ", callback_data="broadcast_")
                ],
                [
                    InlineKeyboardButton("·¥Ñ ú·¥á·¥Ñ·¥ã·¥á Ä", callback_data="checker_"),   
                    InlineKeyboardButton("·¥Ö·¥á·¥†s", callback_data="devs_"),
                    InlineKeyboardButton("…™…¥s·¥õ·¥Ä…¢ Ä·¥Ä·¥ç", callback_data="instagram_")
                ],
               [
                     
                    InlineKeyboardButton("Íú±·¥ú·¥ò·¥á ÄÍú∞ ô·¥Ä…¥", callback_data="fban_"),

                ],
    
                [
                    InlineKeyboardButton("‚ü≤  ô·¥Ä·¥Ñ·¥ã ‚ü≥", callback_data="home_"),
                    InlineKeyboardButton("‚ü≤ ·¥Ñ ü·¥èÍú±·¥á ‚ü≥", callback_data="close_data")
                ]
                ]


back_buttons  = [[
                    InlineKeyboardButton("‚ü≤  ô·¥Ä·¥Ñ·¥ã ‚ü≥", callback_data="help_"),                    
                ]]



#‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ù•
#‚î£‚Ä¢C Ä·¥á·¥Ä·¥õ·¥è Ä¬† ~ @New_AMBOT 
#‚î£‚Ä¢·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥áÍú±1 ~ @AbhiModszYT_Return
#‚î£‚Ä¢·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥áÍú±2 ~ @AMBOTYT
#‚î£‚Ä¢·¥ò·¥è·¥°·¥á Ä  ô è : @Logs_Gban
#‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ù•


@ECOMUSIC.on_message(filters.command("start"))
async def start(_, message):
    await message.reply_photo(
        photo=random.choice(AM_PIC),
        caption=start_txt.format(message.from_user.mention, message.from_user.id),
        reply_markup=button
    )
    
@ECOMUSIC.on_callback_query()
async def cb_handler(client, query):
    if query.data=="home_":
        buttons =  [
            [
                InlineKeyboardButton("‚ûï ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò", url=f"https://t.me/{BOT_USERNAME}?startgroup=true")
            ],
            [
            InlineKeyboardButton("…¢ ô·¥Ä…¥  ü·¥è…¢Íú±", url=f"https://t.me/{CHANNEL}"),    
        ],
            [
                InlineKeyboardButton(" ú·¥á ü·¥ò & ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös", callback_data="help_")
            ]    
        ]
        reply_markup = InlineKeyboardMarkup(buttons)
        try:
            await query.edit_message_text(
                start_txt.format(query.from_user.mention, query.from_user.id),
                reply_markup=reply_markup# Fix: Use query instead of message
            )
        except MessageNotModified:
            pass


# ------------------------------------------------------------------------------- #
        
    elif query.data=="help_":        
        reply_markup = InlineKeyboardMarkup(ECOMUSIC_buttons)
        try:
            await query.edit_message_text(
                help_txt,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass

        
    elif query.data=="music_":        
        reply_markup = InlineKeyboardMarkup(back_buttons)
        try:
            await query.edit_message_text(
                music_txt,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass


    elif query.data=="ai_":        
        reply_markup = InlineKeyboardMarkup(back_buttons)
        try:
            await query.edit_message_text(
                ai_txt,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass


    elif query.data=="bass_":        
        reply_markup = InlineKeyboardMarkup(back_buttons)
        try:
            await query.edit_message_text(
                bass_txt,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass


    elif query.data=="youtube_":        
        reply_markup = InlineKeyboardMarkup(back_buttons)
        try:
            await query.edit_message_text(
                youtube_txt,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass



    elif query.data=="fban_":        
        reply_markup = InlineKeyboardMarkup(back_buttons)
        try:
            await query.edit_message_text(
                fban,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass

    
        
    elif query.data=="misc_":        
        reply_markup = InlineKeyboardMarkup(back_buttons)
        try:
            await query.edit_message_text(
                misc_txt,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass


        
    elif query.data=="broadcast_":        
        reply_markup = InlineKeyboardMarkup(back_buttons)
        try:
            await query.edit_message_text(
                broadcast_txt,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass


    elif query.data=="checker_":        
        reply_markup = InlineKeyboardMarkup(back_buttons)
        try:
            await query.edit_message_text(
                checker_txt,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass

        
    elif query.data=="devs_":        
        reply_markup = InlineKeyboardMarkup(back_buttons)
        try:
            await query.edit_message_text(
                devs_txt,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass        



    elif query.data=="instagram_":        
        reply_markup = InlineKeyboardMarkup(back_buttons)
        try:
            await query.edit_message_text(
                instagram_txt,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass

        
# ------------------------------------------------------------------------------- #

    elif query.data=="maintainer_":
            await query.answer(("s·¥è·¥è…¥.... \n  ô·¥è·¥õ ·¥ú…¥·¥Ö·¥á Ä …™…¥ ·¥ç·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥Ä…¥·¥Ñ·¥á "), show_alert=True)

  
# ------------------------------------------------------------------------------- #
 
    elif query.data=="close_data":
        try:
            await query.message.delete()
            await query.message.reply_to_message.delete()
        except:
            pass

#‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ù•
#‚î£‚Ä¢C Ä·¥á·¥Ä·¥õ·¥è Ä¬† ~ @New_AMBOT 
#‚î£‚Ä¢·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥áÍú±1 ~ @AbhiModszYT_Return
#‚î£‚Ä¢·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥áÍú±2 ~ @AMBOTYT
#‚î£‚Ä¢·¥ò·¥è·¥°·¥á Ä  ô è : @Logs_Gban
#‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ù•
